{"ast":null,"code":"var _jsxFileName = \"/Users/sydney/Desktop/CS_Home_Projects/simpleApp/frontend/src/pages/FlashCards.js\",\n  _s = $RefreshSig$();\nimport FlashCard from \"../components/FlashCard\";\nimport PurpleCat from \"../images/PurpleCat.png\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FlashCards(props) {\n  _s();\n  const {\n    wordListInput\n  } = props;\n  const [index, setIndex] = useState(0);\n  const [showTranslation, setShowTranslation] = useState(false);\n  const [wordList, setWordList] = useState([{\n    word: \"hello\",\n    translation: \"hallo\"\n  }, {\n    word: \"hi\",\n    translation: \"hoi\"\n  }, {\n    word: \"See you later\",\n    translation: \"Tot de volgende keer\"\n  }]);\n  console.log(wordList);\n  useEffect(() => {}, [index]);\n  const removeWord = () => {\n    if (wordList.length === 1) {\n      //\"No more mistakes to review\", \"No more mistakes to review\";\n    } else {\n      setWordList(wordList.splice(index, 1));\n      console.log(wordList);\n      if (index === wordList.length - 1) {\n        setIndex(0);\n      }\n    }\n  };\n  const handlePreviousCard = () => {\n    setIndex(prevIndex => (prevIndex - 1 + wordList.length) % wordList.length);\n  };\n  const handleNextCard = () => {\n    setIndex(prevIndex => (prevIndex + 1) % wordList.length);\n  };\n  const handleFlipCard = () => {\n    setShowTranslation(!showTranslation);\n  };\n  const currentCard = wordList[index];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      class: \"contentReturnBookshelfCat\",\n      src: contentReturnBookshelfCat,\n      alt: \"Purple Cat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        aspectRatio: 2,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flash-card\",\n        onClick: handleFlipCard,\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          fontSize: 75,\n          backgroundColor: \"#e7c0ff\",\n          borderRadius: 40,\n          padding: 100,\n          //marginTop: 40,\n          height: 400,\n          cursor: \"pointer\",\n          minWidth: 400\n        },\n        children: showTranslation ? currentCard.translation : currentCard.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            alignItems: \"center\",\n            fontSize: 50,\n            backgroundColor: \"#A16FB8\",\n            borderRadius: 20,\n            height: 100,\n            width: 180,\n            cursor: \"pointer\",\n            margin: 20\n          },\n          onClick: () => handlePreviousCard(),\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            alignItems: \"center\",\n            fontSize: 50,\n            backgroundColor: \"#A16FB8\",\n            borderRadius: 20,\n            height: 100,\n            width: 180,\n            cursor: \"pointer\",\n            margin: 20\n          },\n          onClick: () => handleNextCard(),\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          alignItems: \"center\",\n          fontSize: 50,\n          borderRadius: 20,\n          height: 100,\n          width: 400,\n          cursor: \"pointer\",\n          backgroundColor: \"#71b86f\"\n        },\n        children: \"Memorized!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashCards, \"bJKa8QuQoc6DgFyC+cJhg3Tgt7k=\");\n_c = FlashCards;\nexport default FlashCards;\nvar _c;\n$RefreshReg$(_c, \"FlashCards\");","map":{"version":3,"names":["FlashCard","PurpleCat","useState","useEffect","jsxDEV","_jsxDEV","FlashCards","props","_s","wordListInput","index","setIndex","showTranslation","setShowTranslation","wordList","setWordList","word","translation","console","log","removeWord","length","splice","handlePreviousCard","prevIndex","handleNextCard","handleFlipCard","currentCard","style","position","top","left","width","height","display","alignItems","children","class","src","contentReturnBookshelfCat","alt","fileName","_jsxFileName","lineNumber","columnNumber","aspectRatio","justifyContent","flexDirection","className","onClick","fontSize","backgroundColor","borderRadius","padding","cursor","minWidth","textAlign","margin","_c","$RefreshReg$"],"sources":["/Users/sydney/Desktop/CS_Home_Projects/simpleApp/frontend/src/pages/FlashCards.js"],"sourcesContent":["import FlashCard from \"../components/FlashCard\";\nimport PurpleCat from \"../images/PurpleCat.png\";\nimport { useState, useEffect } from \"react\";\n\nfunction FlashCards(props) {\n  const { wordListInput } = props;\n  const [index, setIndex] = useState(0);\n  const [showTranslation, setShowTranslation] = useState(false);\n  const [wordList, setWordList] = useState([\n    {\n      word: \"hello\",\n      translation: \"hallo\",\n    },\n    {\n      word: \"hi\",\n      translation: \"hoi\",\n    },\n    {\n      word: \"See you later\",\n      translation: \"Tot de volgende keer\",\n    },\n  ]);\n  console.log(wordList);\n\n  useEffect(() => {}, [index]);\n\n  const removeWord = () => {\n    if (wordList.length === 1) {\n      //\"No more mistakes to review\", \"No more mistakes to review\";\n    } else {\n      setWordList(wordList.splice(index, 1));\n      console.log(wordList);\n\n      if (index === wordList.length - 1) {\n        setIndex(0);\n      }\n    }\n  };\n\n  const handlePreviousCard = () => {\n    setIndex(\n      (prevIndex) =>\n        (prevIndex - 1 + wordList.length) % wordList.length\n    );\n  };\n\n  const handleNextCard = () => {\n    setIndex((prevIndex) => (prevIndex + 1) % wordList.length);\n  };\n\n  const handleFlipCard = () => {\n    setShowTranslation(!showTranslation);\n  };\n\n  const currentCard = wordList[index];\n\n  return (\n    <div style={{\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      display: \"flex\",\n      alignItems: \"center\",\n    }}>\n      <img class=\"contentReturnBookshelfCat\" src={contentReturnBookshelfCat} alt=\"Purple Cat\" />\n    <div\n      style={{\n        width: \"100%\",\n        aspectRatio: 2,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        className=\"flash-card\"\n        onClick={handleFlipCard}\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          fontSize: 75,\n          backgroundColor: \"#e7c0ff\",\n          borderRadius: 40,\n          padding: 100,\n          //marginTop: 40,\n          height: 400,\n          cursor: \"pointer\",\n          minWidth: 400,\n        }}\n      >\n        {showTranslation ? currentCard.translation : currentCard.word}\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            alignItems: \"center\",\n            fontSize: 50,\n            backgroundColor: \"#A16FB8\",\n            borderRadius: 20,\n            height: 100,\n            width: 180,\n            cursor: \"pointer\",\n            margin: 20,\n          }}\n          onClick={() => handlePreviousCard()}\n        >\n          &#x2190;\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            alignItems: \"center\",\n            fontSize: 50,\n            backgroundColor: \"#A16FB8\",\n            borderRadius: 20,\n            height: 100,\n            width: 180,\n            cursor: \"pointer\",\n            margin: 20,\n          }}\n          onClick={() => handleNextCard()}\n        >\n          &#x2192;\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          alignItems: \"center\",\n          fontSize: 50,\n          borderRadius: 20,\n          height: 100,\n          width: 400,\n          cursor: \"pointer\",\n          backgroundColor: \"#71b86f\",\n        }}\n      >\n        Memorized!\n      </div>\n    </div>\n    </div>\n  );\n}\nexport default FlashCards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}