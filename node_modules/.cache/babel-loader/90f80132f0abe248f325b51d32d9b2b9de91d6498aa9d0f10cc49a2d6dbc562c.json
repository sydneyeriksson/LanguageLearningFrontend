{"ast":null,"code":"var _jsxFileName = \"/Users/sydney/Desktop/CS_Home_Projects/simpleApp/frontend/src/pages/FlashCards.js\",\n  _s = $RefreshSig$();\nimport contentReturnBookshelfCat from \"../images/contentReturnCat.png\";\nimport happyReturnBookshelfCat from \"../images/happyReturnCat.png\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"../css/FlashCards.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FlashCards() {\n  _s();\n  const mistakeList = useRef([]); // Initialize ref to persist the mistake list\n  const navigate = useNavigate(); // Hook for navigation\n\n  // Show the first card from the deck in the original language, and content cat\n  const [index, setIndex] = useState(0);\n  const [showTranslation, setShowTranslation] = useState(false);\n  const [currentCat, setCurrentCat] = useState(contentReturnBookshelfCat);\n\n  // Get the word list from the home page\n  // const mistakeList = location.state?.mistakeList || [];\n\n  // Reload the page when the index or mistakeList changes\n  useEffect(() => {\n    var _location$state;\n    // Update the mistake list ref when location.state is available\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.mistakeList) {\n      mistakeList.current = location.state.mistakeList;\n    }\n    console.log('Current mistake list:', mistakeList.current);\n  }, [index, mistakeList]);\n  const removeWord = () => {\n    const currentIndex = index;\n\n    // If on the last card of the deck switch to the first card\n    if (index === mistakeList.length - 1) {\n      setIndex(0);\n    }\n\n    // Remove 1 item at the specified index\n    mistakeList.splice(currentIndex, 1);\n\n    // Make the cat happy for 2 seconds\n    setCurrentCat(happyReturnBookshelfCat);\n    setTimeout(function () {\n      setCurrentCat(contentReturnBookshelfCat);\n    }, 2000);\n  };\n  const handlePreviousCard = () => {\n    // If current card is not the first card, go to the previous card, otherwise go to last card in deck\n    setIndex(prevIndex => (prevIndex - 1 + mistakeList.length) % mistakeList.length);\n  };\n  const handleNextCard = () => {\n    // If current card is not the last card, go to the next card, otherwise go to first card in deck\n    setIndex(prevIndex => (prevIndex + 1) % mistakeList.length);\n  };\n  const handleFlipCard = () => {\n    setShowTranslation(!showTranslation);\n  };\n  const handleReturnToShelf = () => {\n    navigate(\"/\", {\n      state: {\n        mistakeList: mistakeList.current\n      }\n    }); // Navigate to the book shelf\n  };\n  const currentCard = mistakeList[index];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"background\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"catChair\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      class: \"contentReturnBookshelfCat\",\n      src: mistakeList.length < 1 ? happyReturnBookshelfCat : currentCat,\n      onClick: handleReturnToShelf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"flashCardButtonsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashCard\",\n        onClick: handleFlipCard,\n        children: mistakeList.length < 1 ? \"All Done!\" : showTranslation ? currentCard.translation : currentCard.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"changeCardButton\",\n          onClick: () => handlePreviousCard(),\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"changeCardButton\",\n          onClick: () => handleNextCard(),\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"changeCardButton\",\n        onClick: () => removeWord(),\n        children: \"Memorized!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashCards, \"1duBSOS+qfYEbeuK3QNaFO1wrh8=\", false, function () {\n  return [useNavigate];\n});\n_c = FlashCards;\nexport default FlashCards;\nvar _c;\n$RefreshReg$(_c, \"FlashCards\");","map":{"version":3,"names":["contentReturnBookshelfCat","happyReturnBookshelfCat","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","FlashCards","_s","mistakeList","useRef","navigate","index","setIndex","showTranslation","setShowTranslation","currentCat","setCurrentCat","_location$state","location","state","current","console","log","removeWord","currentIndex","length","splice","setTimeout","handlePreviousCard","prevIndex","handleNextCard","handleFlipCard","handleReturnToShelf","currentCard","class","children","fileName","_jsxFileName","lineNumber","columnNumber","src","onClick","className","translation","word","style","display","flexDirection","_c","$RefreshReg$"],"sources":["/Users/sydney/Desktop/CS_Home_Projects/simpleApp/frontend/src/pages/FlashCards.js"],"sourcesContent":["import contentReturnBookshelfCat from \"../images/contentReturnCat.png\";\nimport happyReturnBookshelfCat from \"../images/happyReturnCat.png\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"../css/FlashCards.css\";\n\nfunction FlashCards() {\n  const mistakeList = useRef([]); // Initialize ref to persist the mistake list\n  const navigate = useNavigate(); // Hook for navigation\n\n  // Show the first card from the deck in the original language, and content cat\n  const [index, setIndex] = useState(0);\n  const [showTranslation, setShowTranslation] = useState(false);\n  const [currentCat, setCurrentCat] = useState(contentReturnBookshelfCat);\n\n  // Get the word list from the home page\n  // const mistakeList = location.state?.mistakeList || [];\n\n  // Reload the page when the index or mistakeList changes\n  useEffect(() => {\n    // Update the mistake list ref when location.state is available\n    if (location.state?.mistakeList) {\n      mistakeList.current = location.state.mistakeList;\n    }\n    console.log('Current mistake list:', mistakeList.current);\n  }, [index, mistakeList]);\n\n  const removeWord = () => {\n    const currentIndex = index;\n\n    // If on the last card of the deck switch to the first card\n    if (index === mistakeList.length - 1) {\n      setIndex(0);\n    }\n\n    // Remove 1 item at the specified index\n    mistakeList.splice(currentIndex, 1);\n\n    // Make the cat happy for 2 seconds\n    setCurrentCat(happyReturnBookshelfCat);\n    setTimeout(function () {\n      setCurrentCat(contentReturnBookshelfCat);\n    }, 2000);\n  };\n\n  const handlePreviousCard = () => {\n    // If current card is not the first card, go to the previous card, otherwise go to last card in deck\n    setIndex(\n      (prevIndex) => (prevIndex - 1 + mistakeList.length) % mistakeList.length\n    );\n  };\n\n  const handleNextCard = () => {\n    // If current card is not the last card, go to the next card, otherwise go to first card in deck\n    setIndex((prevIndex) => (prevIndex + 1) % mistakeList.length);\n  };\n\n  const handleFlipCard = () => {\n    setShowTranslation(!showTranslation);\n  };\n\n  const handleReturnToShelf = () => {\n    navigate(\"/\", {\n      state: { mistakeList: mistakeList.current },\n    }); // Navigate to the book shelf\n  };\n\n  const currentCard = mistakeList[index];\n\n  return (\n    <div class=\"background\">\n      <div class=\"catChair\"></div>\n      <img\n        class=\"contentReturnBookshelfCat\"\n        src={mistakeList.length < 1 ? happyReturnBookshelfCat : currentCat}\n        onClick={handleReturnToShelf}\n      />\n      <div class=\"flashCardButtonsContainer\">\n        <div className=\"flashCard\" onClick={handleFlipCard}>\n          {mistakeList.length < 1\n            ? \"All Done!\"\n            : showTranslation\n            ? currentCard.translation\n            : currentCard.word}\n        </div>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div class=\"changeCardButton\" onClick={() => handlePreviousCard()}>\n            {/* left arrow */}\n            &#x2190;\n          </div>\n          <div class=\"changeCardButton\" onClick={() => handleNextCard()}>\n            {/* right arrow */}\n            &#x2192;\n          </div>\n        </div>\n        <div class=\"changeCardButton\" onClick={() => removeWord()}>\n          Memorized!\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default FlashCards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}