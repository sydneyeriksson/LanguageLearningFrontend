{"ast":null,"code":"// WordButton.js\nimport React,{useState}from\"react\";import axios from\"axios\";// Ensure axios is imported\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WordButton=_ref=>{let{initialWord,id,updateMistakeList}=_ref;const[word,setWord]=useState(initialWord);const[isChecked,setIsChecked]=useState(false);// Track checkbox state locally\nconst onChange=async()=>{setIsChecked(prevChecked=>!prevChecked);// Toggle checked state\nconst prevWord=word;setWord(\"Loading ...\");try{// fetch translation\nconst response=await axios.get(\"http://127.0.0.1:5000/translation\",{params:{word:initialWord}});const translatedWord=response.data.word;// Toggle between the original word and the translated word\nsetWord(prevWord===translatedWord?initialWord:translatedWord);if(!isChecked){updateMistakeList({word:initialWord,translation:translatedWord});}}catch(error){console.error(\"There was an error fetching the translation\",error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"checkbox-button-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:id,className:\"checkbox-button-input\",checked:isChecked// Make checkbox checked based on dictionary state\n,onChange:onChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:id,className:\"checkbox-button-label\",children:word})]});};export default WordButton;// Export the component","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","WordButton","_ref","initialWord","id","updateMistakeList","word","setWord","isChecked","setIsChecked","onChange","prevChecked","prevWord","response","get","params","translatedWord","data","translation","error","console","className","children","type","checked","htmlFor"],"sources":["/Users/sydney/Documents/GitHub/LanguageLearningWebApp/frontend/src/components/WordButton.js"],"sourcesContent":["// WordButton.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // Ensure axios is imported\n\nconst WordButton = ({ initialWord, id, updateMistakeList }) => {\n  const [word, setWord] = useState(initialWord);\n  const [isChecked, setIsChecked] = useState(false); // Track checkbox state locally\n\n  const onChange = async () => {\n    setIsChecked((prevChecked) => !prevChecked); // Toggle checked state\n\n    const prevWord = word;\n    setWord(\"Loading ...\");\n    try {\n      // fetch translation\n      const response = await axios.get(\"http://127.0.0.1:5000/translation\", {\n        params: {\n          word: initialWord,\n        },\n      });\n\n      const translatedWord = response.data.word;\n\n      // Toggle between the original word and the translated word\n      setWord(prevWord === translatedWord ? initialWord : translatedWord);\n      if (!isChecked) {\n        updateMistakeList({\n          word: initialWord,\n          translation: translatedWord,\n        });\n      }\n    } catch (error) {\n      console.error(\"There was an error fetching the translation\", error);\n    }\n  };\n\n  return (\n    <div className=\"checkbox-button-container\">\n      <input\n        type=\"checkbox\"\n        id={id}\n        className=\"checkbox-button-input\"\n        checked={isChecked} // Make checkbox checked based on dictionary state\n        onChange={onChange}\n      />\n      <label htmlFor={id} className=\"checkbox-button-label\">\n        {word}\n      </label>\n    </div>\n  );\n};\n\nexport default WordButton; // Export the component\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3B,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAA4C,IAA3C,CAAEC,WAAW,CAAEC,EAAE,CAAEC,iBAAkB,CAAC,CAAAH,IAAA,CACxD,KAAM,CAACI,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAACQ,WAAW,CAAC,CAC7C,KAAM,CAACK,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAAE;AAEnD,KAAM,CAAAe,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAC3BD,YAAY,CAAEE,WAAW,EAAK,CAACA,WAAW,CAAC,CAAE;AAE7C,KAAM,CAAAC,QAAQ,CAAGN,IAAI,CACrBC,OAAO,CAAC,aAAa,CAAC,CACtB,GAAI,CACF;AACA,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAjB,KAAK,CAACkB,GAAG,CAAC,mCAAmC,CAAE,CACpEC,MAAM,CAAE,CACNT,IAAI,CAAEH,WACR,CACF,CAAC,CAAC,CAEF,KAAM,CAAAa,cAAc,CAAGH,QAAQ,CAACI,IAAI,CAACX,IAAI,CAEzC;AACAC,OAAO,CAACK,QAAQ,GAAKI,cAAc,CAAGb,WAAW,CAAGa,cAAc,CAAC,CACnE,GAAI,CAACR,SAAS,CAAE,CACdH,iBAAiB,CAAC,CAChBC,IAAI,CAAEH,WAAW,CACjBe,WAAW,CAAEF,cACf,CAAC,CAAC,CACJ,CACF,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6CAA6C,CAAEA,KAAK,CAAC,CACrE,CACF,CAAC,CAED,mBACEnB,KAAA,QAAKqB,SAAS,CAAC,2BAA2B,CAAAC,QAAA,eACxCxB,IAAA,UACEyB,IAAI,CAAC,UAAU,CACfnB,EAAE,CAAEA,EAAG,CACPiB,SAAS,CAAC,uBAAuB,CACjCG,OAAO,CAAEhB,SAAW;AAAA,CACpBE,QAAQ,CAAEA,QAAS,CACpB,CAAC,cACFZ,IAAA,UAAO2B,OAAO,CAAErB,EAAG,CAACiB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAClDhB,IAAI,CACA,CAAC,EACL,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,UAAU,CAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}