{"ast":null,"code":"var _jsxFileName = \"/Users/sydney/Desktop/CS_Home_Projects/simpleApp/frontend/src/pages/FlashCards.js\",\n  _s = $RefreshSig$();\nimport contentReturnBookshelfCat from \"../images/contentReturnCat.png\";\nimport happyReturnBookshelfCat from \"../images/happyReturnCat.png\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"../css/FlashCards.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FlashCards() {\n  _s();\n  var _location$state;\n  const navigate = useNavigate(); // Hook for navigation\n\n  // Show the first card from the deck in the original language, and content cat\n  const [index, setIndex] = useState(0);\n  const [showTranslation, setShowTranslation] = useState(false);\n  const [currentCat, setCurrentCat] = useState(contentReturnBookshelfCat);\n\n  // Get the word list from the home page\n  const location = useLocation();\n  const mistakeList = [...new Set((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.mistakeList)] || [];\n  mistakeList.current = [...new Set(mistakeList.current)];\n  // Reload the page when the index or mistakeList changes\n  useEffect(() => {}, [index]);\n  const removeWord = () => {\n    const currentIndex = index;\n\n    // If on the last card of the deck switch to the first card\n    if (index === mistakeList.length - 1) {\n      setIndex(0);\n    }\n\n    // Remove 1 item at the specified index\n    mistakeList.splice(currentIndex, 1);\n\n    // Make the cat happy for 2 seconds\n    setCurrentCat(happyReturnBookshelfCat);\n    setTimeout(function () {\n      setCurrentCat(contentReturnBookshelfCat);\n    }, 2000);\n  };\n  const handlePreviousCard = () => {\n    // If current card is not the first card, go to the previous card, otherwise go to last card in deck\n    setIndex(prevIndex => (prevIndex - 1 + mistakeList.length) % mistakeList.length);\n  };\n  const handleNextCard = () => {\n    // If current card is not the last card, go to the next card, otherwise go to first card in deck\n    setIndex(prevIndex => (prevIndex + 1) % mistakeList.length);\n  };\n  const handleFlipCard = () => {\n    setShowTranslation(!showTranslation);\n  };\n  const handleReturnToShelf = () => {\n    navigate(\"/\", {\n      state: {\n        mistakeList: mistakeList\n      }\n    }); // Navigate to the book shelf\n  };\n  const currentCard = mistakeList[index];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"background\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"catChair\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      class: \"contentReturnBookshelfCat\",\n      src: mistakeList.length < 1 ? happyReturnBookshelfCat : currentCat,\n      onClick: handleReturnToShelf,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"flashCardButtonsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashCard\",\n        onClick: handleFlipCard,\n        children: mistakeList.length < 1 ? \"All Done!\" : showTranslation ? currentCard.translation : currentCard.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"changeCardButton\",\n          onClick: () => handlePreviousCard(),\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"changeCardButton\",\n          onClick: () => handleNextCard(),\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"changeCardButton\",\n        onClick: () => removeWord(),\n        children: \"Memorized!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashCards, \"jsXjQevTEMe5rocWdPWnf8/cDfc=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = FlashCards;\nexport default FlashCards;\nvar _c;\n$RefreshReg$(_c, \"FlashCards\");","map":{"version":3,"names":["contentReturnBookshelfCat","happyReturnBookshelfCat","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","FlashCards","_s","_location$state","navigate","index","setIndex","showTranslation","setShowTranslation","currentCat","setCurrentCat","location","mistakeList","Set","state","current","removeWord","currentIndex","length","splice","setTimeout","handlePreviousCard","prevIndex","handleNextCard","handleFlipCard","handleReturnToShelf","currentCard","class","children","fileName","_jsxFileName","lineNumber","columnNumber","src","onClick","alt","className","translation","word","style","display","flexDirection","_c","$RefreshReg$"],"sources":["/Users/sydney/Desktop/CS_Home_Projects/simpleApp/frontend/src/pages/FlashCards.js"],"sourcesContent":["import contentReturnBookshelfCat from \"../images/contentReturnCat.png\";\nimport happyReturnBookshelfCat from \"../images/happyReturnCat.png\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"../css/FlashCards.css\";\n\nfunction FlashCards() {\n  const navigate = useNavigate(); // Hook for navigation\n\n  // Show the first card from the deck in the original language, and content cat\n  const [index, setIndex] = useState(0);\n  const [showTranslation, setShowTranslation] = useState(false);\n  const [currentCat, setCurrentCat] = useState(contentReturnBookshelfCat);\n\n  // Get the word list from the home page\n  const location = useLocation();\n  const mistakeList = [...new Set(location.state?.mistakeList)] || [];\n\n  mistakeList.current = [...new Set(mistakeList.current)];\n  // Reload the page when the index or mistakeList changes\n  useEffect(() => {}, [index]);\n\n  const removeWord = () => {\n    const currentIndex = index;\n\n    // If on the last card of the deck switch to the first card\n    if (index === mistakeList.length - 1) {\n      setIndex(0);\n    }\n\n    // Remove 1 item at the specified index\n    mistakeList.splice(currentIndex, 1);\n\n    // Make the cat happy for 2 seconds\n    setCurrentCat(happyReturnBookshelfCat);\n    setTimeout(function () {\n      setCurrentCat(contentReturnBookshelfCat);\n    }, 2000);\n  };\n\n  const handlePreviousCard = () => {\n    // If current card is not the first card, go to the previous card, otherwise go to last card in deck\n    setIndex(\n      (prevIndex) => (prevIndex - 1 + mistakeList.length) % mistakeList.length\n    );\n  };\n\n  const handleNextCard = () => {\n    // If current card is not the last card, go to the next card, otherwise go to first card in deck\n    setIndex((prevIndex) => (prevIndex + 1) % mistakeList.length);\n  };\n\n  const handleFlipCard = () => {\n    setShowTranslation(!showTranslation);\n  };\n\n  const handleReturnToShelf = () => {\n    navigate(\"/\", {\n      state: { mistakeList: mistakeList },\n    }); // Navigate to the book shelf\n  };\n\n  const currentCard = mistakeList[index];\n\n  return (\n    <div class=\"background\">\n      <div class=\"catChair\"></div>\n      <img\n        class=\"contentReturnBookshelfCat\"\n        src={mistakeList.length < 1 ? happyReturnBookshelfCat : currentCat}\n        onClick={handleReturnToShelf}\n        alt=\"\"\n      />\n      <div class=\"flashCardButtonsContainer\">\n        <div className=\"flashCard\" onClick={handleFlipCard}>\n          {mistakeList.length < 1\n            ? \"All Done!\"\n            : showTranslation\n            ? currentCard.translation\n            : currentCard.word}\n        </div>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div class=\"changeCardButton\" onClick={() => handlePreviousCard()}>\n            {/* left arrow */}\n            &#x2190;\n          </div>\n          <div class=\"changeCardButton\" onClick={() => handleNextCard()}>\n            {/* right arrow */}\n            &#x2192;\n          </div>\n        </div>\n        <div class=\"changeCardButton\" onClick={() => removeWord()}>\n          Memorized!\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default FlashCards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}