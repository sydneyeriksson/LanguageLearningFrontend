{"ast":null,"code":"var _jsxFileName = \"/Users/sydney/Desktop/CS_Home_Projects/simpleApp/frontend/src/pages/FlashCards.js\",\n  _s = $RefreshSig$();\nimport FlashCard from \"../components/FlashCard\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FlashCards(props) {\n  _s();\n  const {\n    wordListInput\n  } = props;\n  const [index, setIndex] = useState(0);\n  const [showTranslation, setShowTranslation] = useState(false);\n  const [wordList, setWordList] = useState([{\n    word: \"hello\",\n    translation: \"hallo\"\n  }, {\n    word: \"hi\",\n    translation: \"hoi\"\n  }, {\n    word: \"See you later\",\n    translation: \"Tot de volgende keer\"\n  }]);\n  console.log(wordList);\n  useEffect(() => {}, [index]);\n  const removeWord = () => {\n    if (wordList.length === 1) {\n      //\"No more mistakes to review\", \"No more mistakes to review\";\n    } else {\n      setWordList(wordList.splice(index, 1));\n      console.log(wordList);\n      if (index === wordList.length - 1) {\n        setIndex(0);\n      }\n    }\n  };\n  const handleNextCard = () => {\n    setShowTranslation(false);\n    setIndex(prevIndex => (prevIndex + 1) % wordList.length);\n  };\n  const handleFlipCard = () => {\n    setShowTranslation(!showTranslation);\n  };\n  const currentCard = wordList[index];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      aspectRatio: 2,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flash-card\",\n      onClick: handleFlipCard,\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 100,\n        backgroundColor: \"#e7c0ff\",\n        borderRadius: 40,\n        padding: 100,\n        margin: 20,\n        height: 400,\n        cursor: \"pointer\",\n        minWidth: 400\n      },\n      children: showTranslation ? currentCard.translation : currentCard.word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          alignItems: \"center\",\n          fontSize: 50,\n          backgroundColor: \"red\",\n          borderRadius: 20,\n          height: 100,\n          width: 180,\n          cursor: \"pointer\",\n          margin: 20\n        },\n        onClick: () => handleNextCard(),\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          alignItems: \"center\",\n          fontSize: 50,\n          backgroundColor: \"green\",\n          borderRadius: 20,\n          height: 100,\n          width: 180,\n          cursor: \"pointer\",\n          margin: 20\n        },\n        onClick: () => removeWord(),\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        alignItems: \"center\",\n        fontSize: 50,\n        borderRadius: 20,\n        height: 100,\n        width: 400,\n        cursor: \"pointer\",\n        backgroundColor: \"#A16FB8\"\n      },\n      children: \"Memorized!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashCards, \"bJKa8QuQoc6DgFyC+cJhg3Tgt7k=\");\n_c = FlashCards;\nexport default FlashCards;\nvar _c;\n$RefreshReg$(_c, \"FlashCards\");","map":{"version":3,"names":["FlashCard","useState","useEffect","jsxDEV","_jsxDEV","FlashCards","props","_s","wordListInput","index","setIndex","showTranslation","setShowTranslation","wordList","setWordList","word","translation","console","log","removeWord","length","splice","handleNextCard","prevIndex","handleFlipCard","currentCard","style","width","aspectRatio","justifyContent","alignItems","display","flexDirection","children","className","onClick","fontSize","backgroundColor","borderRadius","padding","margin","height","cursor","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","_c","$RefreshReg$"],"sources":["/Users/sydney/Desktop/CS_Home_Projects/simpleApp/frontend/src/pages/FlashCards.js"],"sourcesContent":["import FlashCard from \"../components/FlashCard\";\nimport { useState, useEffect } from \"react\";\n\nfunction FlashCards(props) {\n  const { wordListInput } = props;\n  const [index, setIndex] = useState(0);\n  const [showTranslation, setShowTranslation] = useState(false);\n  const [wordList, setWordList] = useState([\n    {\n      word: \"hello\",\n      translation: \"hallo\",\n    },\n    {\n      word: \"hi\",\n      translation: \"hoi\",\n    },\n    {\n      word: \"See you later\",\n      translation: \"Tot de volgende keer\",\n    },\n  ]);\n  console.log(wordList);\n\n  useEffect(() => {}, [index]);\n\n  const removeWord = () => {\n    if (wordList.length === 1) {\n      //\"No more mistakes to review\", \"No more mistakes to review\";\n    } else {\n      setWordList(wordList.splice(index, 1));\n      console.log(wordList);\n\n      if (index === wordList.length - 1) {\n        setIndex(0);\n      }\n    }\n  };\n\n  const handleNextCard = () => {\n    setShowTranslation(false);\n    setIndex((prevIndex) => (prevIndex + 1) % wordList.length);\n  };\n\n  const handleFlipCard = () => {\n    setShowTranslation(!showTranslation);\n  };\n\n  const currentCard = wordList[index];\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        aspectRatio: 2,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        className=\"flash-card\"\n        onClick={handleFlipCard}\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          fontSize: 100,\n          backgroundColor: \"#e7c0ff\",\n          borderRadius: 40,\n          padding: 100,\n          margin: 20,\n          height: 400,\n          cursor: \"pointer\",\n          minWidth: 400,\n        }}\n      >\n        {showTranslation ? currentCard.translation : currentCard.word}\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            alignItems: \"center\",\n            fontSize: 50,\n            backgroundColor: \"red\",\n            borderRadius: 20,\n            height: 100,\n            width: 180,\n            cursor: \"pointer\",\n            margin: 20,\n          }}\n          onClick={() => handleNextCard()}\n        >\n          &#x2190;\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            alignItems: \"center\",\n            fontSize: 50,\n            backgroundColor: \"green\",\n            borderRadius: 20,\n            height: 100,\n            width: 180,\n            cursor: \"pointer\",\n            margin: 20,\n          }}\n          onClick={() => removeWord()}\n        >\n          &#x2192;\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          alignItems: \"center\",\n          fontSize: 50,\n          borderRadius: 20,\n          height: 100,\n          width: 400,\n          cursor: \"pointer\",\n          backgroundColor: \"#A16FB8\",\n        }}\n      >\n        Memorized!\n      </div>\n    </div>\n  );\n}\nexport default FlashCards;\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAc,CAAC,GAAGF,KAAK;EAC/B,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CACvC;IACEc,IAAI,EAAE,OAAO;IACbC,WAAW,EAAE;EACf,CAAC,EACD;IACED,IAAI,EAAE,IAAI;IACVC,WAAW,EAAE;EACf,CAAC,EACD;IACED,IAAI,EAAE,eAAe;IACrBC,WAAW,EAAE;EACf,CAAC,CACF,CAAC;EACFC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;EAErBX,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAACO,KAAK,CAAC,CAAC;EAE5B,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIN,QAAQ,CAACO,MAAM,KAAK,CAAC,EAAE;MACzB;IAAA,CACD,MAAM;MACLN,WAAW,CAACD,QAAQ,CAACQ,MAAM,CAACZ,KAAK,EAAE,CAAC,CAAC,CAAC;MACtCQ,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MAErB,IAAIJ,KAAK,KAAKI,QAAQ,CAACO,MAAM,GAAG,CAAC,EAAE;QACjCV,QAAQ,CAAC,CAAC,CAAC;MACb;IACF;EACF,CAAC;EAED,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3BV,kBAAkB,CAAC,KAAK,CAAC;IACzBF,QAAQ,CAAEa,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIV,QAAQ,CAACO,MAAM,CAAC;EAC5D,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3BZ,kBAAkB,CAAC,CAACD,eAAe,CAAC;EACtC,CAAC;EAED,MAAMc,WAAW,GAAGZ,QAAQ,CAACJ,KAAK,CAAC;EAEnC,oBACEL,OAAA;IACEsB,KAAK,EAAE;MACLC,KAAK,EAAE,MAAM;MACbC,WAAW,EAAE,CAAC;MACdC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE;IACjB,CAAE;IAAAC,QAAA,gBAEF7B,OAAA;MACE8B,SAAS,EAAC,YAAY;MACtBC,OAAO,EAAEX,cAAe;MACxBE,KAAK,EAAE;QACLK,OAAO,EAAE,MAAM;QACfF,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBM,QAAQ,EAAE,GAAG;QACbC,eAAe,EAAE,SAAS;QAC1BC,YAAY,EAAE,EAAE;QAChBC,OAAO,EAAE,GAAG;QACZC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE,GAAG;QACXC,MAAM,EAAE,SAAS;QACjBC,QAAQ,EAAE;MACZ,CAAE;MAAAV,QAAA,EAEDtB,eAAe,GAAGc,WAAW,CAACT,WAAW,GAAGS,WAAW,CAACV;IAAI;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACN3C,OAAA;MAAKsB,KAAK,EAAE;QAAEK,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE;MAAM,CAAE;MAAAC,QAAA,gBACpD7B,OAAA;QACEsB,KAAK,EAAE;UACLK,OAAO,EAAE,MAAM;UACfF,cAAc,EAAE,QAAQ;UACxBmB,SAAS,EAAE,QAAQ;UACnBlB,UAAU,EAAE,QAAQ;UACpBM,QAAQ,EAAE,EAAE;UACZC,eAAe,EAAE,KAAK;UACtBC,YAAY,EAAE,EAAE;UAChBG,MAAM,EAAE,GAAG;UACXd,KAAK,EAAE,GAAG;UACVe,MAAM,EAAE,SAAS;UACjBF,MAAM,EAAE;QACV,CAAE;QACFL,OAAO,EAAEA,CAAA,KAAMb,cAAc,CAAC,CAAE;QAAAW,QAAA,EACjC;MAED;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN3C,OAAA;QACEsB,KAAK,EAAE;UACLK,OAAO,EAAE,MAAM;UACfF,cAAc,EAAE,QAAQ;UACxBmB,SAAS,EAAE,QAAQ;UACnBlB,UAAU,EAAE,QAAQ;UACpBM,QAAQ,EAAE,EAAE;UACZC,eAAe,EAAE,OAAO;UACxBC,YAAY,EAAE,EAAE;UAChBG,MAAM,EAAE,GAAG;UACXd,KAAK,EAAE,GAAG;UACVe,MAAM,EAAE,SAAS;UACjBF,MAAM,EAAE;QACV,CAAE;QACFL,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAAC,CAAE;QAAAc,QAAA,EAC7B;MAED;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN3C,OAAA;MACEsB,KAAK,EAAE;QACLK,OAAO,EAAE,MAAM;QACfF,cAAc,EAAE,QAAQ;QACxBmB,SAAS,EAAE,QAAQ;QACnBlB,UAAU,EAAE,QAAQ;QACpBM,QAAQ,EAAE,EAAE;QACZE,YAAY,EAAE,EAAE;QAChBG,MAAM,EAAE,GAAG;QACXd,KAAK,EAAE,GAAG;QACVe,MAAM,EAAE,SAAS;QACjBL,eAAe,EAAE;MACnB,CAAE;MAAAJ,QAAA,EACH;IAED;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxC,EAAA,CApIQF,UAAU;AAAA4C,EAAA,GAAV5C,UAAU;AAqInB,eAAeA,UAAU;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}