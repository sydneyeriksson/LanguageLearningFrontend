{"ast":null,"code":"var _jsxFileName = \"/Users/sydney/Desktop/Desktop - MacBook Air (2)/tempFrontend/LanguageLearningFrontend/src/pages/home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, setPage, useRef } from \"react\";\nimport axios from \"axios\";\nimport catWithYarn from \"../images/CatWithYarn.gif\";\nimport DarkModeCatWithString from \"../images/DarkModeCatWithString.gif\";\nimport PurpleCatMoving from \"../images/PurpleCatMoving.gif\";\nimport DarkModePurpleCat from \"../images/DarkModePurpleCat.gif\";\nimport BookPage from \"../components/bookPage\";\nimport Bookshelf from \"../components/Bookshelf\";\nimport Header from \"../components/Header\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"../css/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  // Get the word list from the home page\n  // const location = useLocation();\n  // const wordList = location.state?.mistakeList || [];\n  const [title, setTitle] = useState(\"Alice in Wonderland.txt\");\n  const [pageNum, setPageNum] = useState(1);\n  const [language, setLanguage] = useState(\"english\");\n  const [difficulty, setDifficulty] = useState(\"Hard\");\n  const [textSize, setTextSize] = useState(\"medium\");\n  const [font, setFont] = useState(\"Times New Roman\");\n  const [darkMode, setDarkMode] = useState(\"light\");\n  document.documentElement.setAttribute(\"darkMode\", darkMode);\n  const mistakeList = useRef([]);\n  const [reload, setReload] = useState(false);\n  const navigate = useNavigate(); // Hook for navigation\n  const [page, setPage] = useState([]);\n  const location = useLocation();\n  const [reloaded, setReloaded] = useState(true);\n\n  // Get previous settings on reload\n  if (reloaded) {\n    const savedTitle = sessionStorage.getItem(\"title\");\n    const savedDifficulty = sessionStorage.getItem(\"difficulty\");\n    const savedPageNum = sessionStorage.getItem(\"pageNum\");\n    const savedLanguage = sessionStorage.getItem(\"language\");\n    const savedTextSize = sessionStorage.getItem(\"textSize\");\n    const savedFont = sessionStorage.getItem(\"font\");\n    const savedDarkMode = sessionStorage.getItem(\"darkMode\");\n    const savedPage = sessionStorage.getItem(\"page\");\n    if (savedTitle) setTitle(String(savedTitle));\n    if (savedDifficulty) setDifficulty(String(savedDifficulty));\n    if (savedPageNum) setPageNum(Number(savedPageNum));\n    if (savedLanguage) setLanguage(String(savedLanguage));\n    if (savedTextSize) setTextSize(String(savedTextSize));\n    if (savedFont) setFont(String(savedFont));\n    if (savedDarkMode) setDarkMode(String(savedDarkMode));\n    if (savedPage) setPage(Array(savedPage));\n    document.documentElement.setAttribute(\"darkMode\", darkMode);\n    setReloaded(false);\n  }\n  useEffect(() => {\n    sessionStorage.setItem(\"textSize\", textSize);\n    sessionStorage.setItem(\"font\", font);\n    sessionStorage.setItem(\"darkMode\", darkMode);\n  }, [textSize, font, darkMode]);\n\n  // Get the new page from the server\n  useEffect(() => {\n    var _location$state;\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.mistakeList) {\n      mistakeList.current = location.state.mistakeList;\n    }\n    setPage([]);\n    // if (location.state?.mistakeList) {\n    //   mistakeList.current = location.state.mistakeList;\n    // }\n\n    axios.get(\"https://languagelearningbackend.onrender.com/book\", {\n      params: {\n        pageNum: pageNum,\n        title: title,\n        difficulty: difficulty,\n        language: language\n      }\n    }).then(response => {\n      setPage(response.data.page);\n    }).catch(error => {\n      console.error(\"There was an error fetching the page!\", error);\n    });\n    // Save settings\n    sessionStorage.setItem(\"title\", title);\n    sessionStorage.setItem(\"difficulty\", difficulty);\n    sessionStorage.setItem(\"pageNum\", pageNum);\n    sessionStorage.setItem(\"language\", language);\n    sessionStorage.setItem(\"textSize\", textSize);\n    sessionStorage.setItem(\"font\", font);\n    sessionStorage.setItem(\"darkMode\", darkMode);\n    sessionStorage.setItem(\"page\", page);\n  }, [title, pageNum, language, difficulty]);\n  const updateMistakeList = mistake => {\n    mistakeList.current.push(mistake);\n  };\n  const handleClickBook = newTitle => {\n    setTitle(newTitle);\n  };\n  const handleNextPage = newPageNum => {\n    setPageNum(newPageNum);\n  };\n  const incrementPage = () => {\n    setPageNum(prevPageNum => {\n      const newPageNum = Math.min(prevPageNum + 1, 1000); // Increment but limit to 1000\n      handleNextPage(newPageNum); // Ensure the function is called with the updated page number\n      return newPageNum;\n    });\n  };\n  const decrementPage = () => {\n    setPageNum(prevPageNum => {\n      const newPageNum = Math.max(prevPageNum - 1, 1); // Decrement but limit to 1\n      handleNextPage(newPageNum); // Ensure the function is called with the updated page number\n      return newPageNum;\n    });\n  };\n  const handleGoToPage = e => {\n    setPageNum(e.target.value);\n  };\n  const handleBlur = () => {\n    // When the input loses focus, enforce the bounds (1 to 1000)\n    const validPageNum = Math.max(1, Math.min(1000, pageNum));\n    setPageNum(validPageNum);\n    handleNextPage(validPageNum); // Update the page number if needed\n  };\n  const handleGoToFlashCards = () => {\n    // Make sure mistake list is updated\n    setReload(!reload);\n\n    // Go to the flash cards page\n    navigate(\"/flash-cards\", {\n      state: {\n        mistakeList: mistakeList.current\n      }\n    });\n  };\n\n  // //Swipe to turn page\n  // let startX;\n  // let startY;\n\n  // const swipeArea = document.getElementById(\"swipeArea\");\n\n  // swipeArea.addEventListener(\"touchstart\", (e) => {\n  //   // Get the starting position of the touch\n  //   const touchStart = e.touches[0];\n  //   startX = touchStart.clientX;\n  //   startY = touchStart.clientY;\n  // });\n\n  // swipeArea.addEventListener(\"touchend\", (e) => {\n  //   // Get the ending position of the touch\n  //   const touchEnd = e.changedTouches[0];\n  //   const endX = touchEnd.clientX;\n  //   const endY = touchEnd.clientY;\n\n  //   // Calculate the swipe direction\n  //   const deltaX = endX - startX;\n  //   const deltaY = endY - startY;\n\n  //   // Detect horizontal swipe\n  //   if (Math.abs(deltaX) > Math.abs(deltaY)) {\n  //     if (deltaX > 0) {\n  //       incrementPage();\n  //     } else {\n  //       decrementPage();\n  //     }\n  //   }\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    style: {\n      fontFamily: font\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mobile-content\",\n      style: {\n        fontSize: textSize,\n        fontFamily: font\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"Bookshelf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bookshelf, {\n          handleClickBook: handleClickBook,\n          darkMode: darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          title: title,\n          setDarkMode: setDarkMode,\n          setLanguage: setLanguage,\n          setTextSize: setTextSize,\n          setDifficulty: setDifficulty,\n          setFont: setFont,\n          darkMode: darkMode,\n          language: language,\n          textSize: textSize,\n          difficulty: difficulty,\n          font: font,\n          pageNum: pageNum,\n          handleGoToPage: handleGoToPage,\n          handleBlur: handleBlur,\n          handleGoToFlashCards: handleGoToFlashCards,\n          document: document,\n          id: \"drop-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        title: title,\n        setDarkMode: setDarkMode,\n        setLanguage: setLanguage,\n        setTextSize: setTextSize,\n        setDifficulty: setDifficulty,\n        setFont: setFont,\n        darkMode: darkMode,\n        language: language,\n        textSize: textSize,\n        difficulty: difficulty,\n        font: font,\n        pageNum: pageNum,\n        handleGoToPage: handleGoToPage,\n        handleBlur: handleBlur,\n        handleGoToFlashCards: handleGoToFlashCards,\n        document: document,\n        id: \"wide-view\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"content\", {\n      id: \"swipeArea\",\n      style: {\n        fontSize: textSize,\n        fontFamily: font\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"noDisplayOnMedia\",\n        children: /*#__PURE__*/_jsxDEV(Bookshelf, {\n          handleClickBook: handleClickBook,\n          darkMode: darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BookPage, {\n        page: page,\n        incrementPage: incrementPage,\n        decrementPage: decrementPage,\n        updateMistakeList: updateMistakeList,\n        darkMode: darkMode,\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this)\n  // <div class=\"container\" style={{ fontFamily: font }}>\n  //   {/* Header */}\n  //   <div class=\"mobile-content\">\n  //     <details>\n  //       <summary>Bookshelf</summary>\n  //       <Bookshelf\n  //         handleClickBook={handleClickBook}\n  //         darkMode={darkMode}\n  //       ></Bookshelf>\n  //     </details>\n  //     <details>\n  //       <summary>Settings</summary>\n  //       <Header\n  //         title={title}\n  //         setDarkMode={setDarkMode}\n  //         setLanguage={setLanguage}\n  //         setTextSize={setTextSize}\n  //         setDifficulty={setDifficulty}\n  //         setFont={setFont}\n  //         darkMode={darkMode}\n  //         language={language}\n  //         textSize={textSize}\n  //         difficulty={difficulty}\n  //         font={font}\n  //         pageNum={pageNum}\n  //         handleGoToPage={handleGoToPage}\n  //         handleBlur={handleBlur}\n  //         handleGoToFlashCards={handleGoToFlashCards}\n  //         document={document}\n  //       ></Header>\n  //     </details>\n  //     <BookPage\n  //       page={page}\n  //       incrementPage={incrementPage}\n  //       decrementPage={decrementPage}\n  //       updateMistakeList={updateMistakeList}\n  //       darkMode={darkMode}\n  //       language={language}\n  //     ></BookPage>\n  //   </div>\n  //   <header>\n  //     <Header\n  //       title={title}\n  //       setDarkMode={setDarkMode}\n  //       setLanguage={setLanguage}\n  //       setTextSize={setTextSize}\n  //       setDifficulty={setDifficulty}\n  //       setFont={setFont}\n  //       darkMode={darkMode}\n  //       language={language}\n  //       textSize={textSize}\n  //       difficulty={difficulty}\n  //       font={font}\n  //       pageNum={pageNum}\n  //       handleGoToPage={handleGoToPage}\n  //       handleBlur={handleBlur}\n  //       handleGoToFlashCards={handleGoToFlashCards}\n  //       document={document}\n  //     ></Header>\n  //   </header>\n  //   <content style={{ fontSize: textSize, fontFamily: font }}>\n  //     <Bookshelf\n  //       handleClickBook={handleClickBook}\n  //       darkMode={darkMode}\n  //     ></Bookshelf>\n  //     <BookPage\n  //       page={page}\n  //       incrementPage={incrementPage}\n  //       decrementPage={decrementPage}\n  //       updateMistakeList={updateMistakeList}\n  //       darkMode={darkMode}\n  //       language={language}\n  //     ></BookPage>\n  //   </content>\n  // </div>\n  ;\n}\n_s(Home, \"UplEq4IDYGyvX2312bgeM9br300=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","setPage","useRef","axios","catWithYarn","DarkModeCatWithString","PurpleCatMoving","DarkModePurpleCat","BookPage","Bookshelf","Header","useNavigate","useLocation","jsxDEV","_jsxDEV","Home","_s","title","setTitle","pageNum","setPageNum","language","setLanguage","difficulty","setDifficulty","textSize","setTextSize","font","setFont","darkMode","setDarkMode","document","documentElement","setAttribute","mistakeList","reload","setReload","navigate","page","location","reloaded","setReloaded","savedTitle","sessionStorage","getItem","savedDifficulty","savedPageNum","savedLanguage","savedTextSize","savedFont","savedDarkMode","savedPage","String","Number","Array","setItem","_location$state","state","current","get","params","then","response","data","catch","error","console","updateMistakeList","mistake","push","handleClickBook","newTitle","handleNextPage","newPageNum","incrementPage","prevPageNum","Math","min","decrementPage","max","handleGoToPage","e","target","value","handleBlur","validPageNum","handleGoToFlashCards","class","style","fontFamily","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/sydney/Desktop/Desktop - MacBook Air (2)/tempFrontend/LanguageLearningFrontend/src/pages/home.js"],"sourcesContent":["import React, { useState, useEffect, setPage, useRef } from \"react\";\nimport axios from \"axios\";\nimport catWithYarn from \"../images/CatWithYarn.gif\";\nimport DarkModeCatWithString from \"../images/DarkModeCatWithString.gif\";\nimport PurpleCatMoving from \"../images/PurpleCatMoving.gif\";\nimport DarkModePurpleCat from \"../images/DarkModePurpleCat.gif\";\nimport BookPage from \"../components/bookPage\";\nimport Bookshelf from \"../components/Bookshelf\";\nimport Header from \"../components/Header\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"../css/index.css\";\n\nfunction Home() {\n  // Get the word list from the home page\n  // const location = useLocation();\n  // const wordList = location.state?.mistakeList || [];\n  const [title, setTitle] = useState(\"Alice in Wonderland.txt\");\n  const [pageNum, setPageNum] = useState(1);\n  const [language, setLanguage] = useState(\"english\");\n  const [difficulty, setDifficulty] = useState(\"Hard\");\n  const [textSize, setTextSize] = useState(\"medium\");\n  const [font, setFont] = useState(\"Times New Roman\");\n  const [darkMode, setDarkMode] = useState(\"light\");\n  document.documentElement.setAttribute(\"darkMode\", darkMode);\n\n  const mistakeList = useRef([]);\n  const [reload, setReload] = useState(false);\n  const navigate = useNavigate(); // Hook for navigation\n  const [page, setPage] = useState([]);\n  const location = useLocation();\n  const [reloaded, setReloaded] = useState(true);\n\n  // Get previous settings on reload\n  if (reloaded) {\n    const savedTitle = sessionStorage.getItem(\"title\");\n    const savedDifficulty = sessionStorage.getItem(\"difficulty\");\n    const savedPageNum = sessionStorage.getItem(\"pageNum\");\n    const savedLanguage = sessionStorage.getItem(\"language\");\n    const savedTextSize = sessionStorage.getItem(\"textSize\");\n    const savedFont = sessionStorage.getItem(\"font\");\n    const savedDarkMode = sessionStorage.getItem(\"darkMode\");\n    const savedPage = sessionStorage.getItem(\"page\");\n\n    if (savedTitle) setTitle(String(savedTitle));\n    if (savedDifficulty) setDifficulty(String(savedDifficulty));\n    if (savedPageNum) setPageNum(Number(savedPageNum));\n    if (savedLanguage) setLanguage(String(savedLanguage));\n    if (savedTextSize) setTextSize(String(savedTextSize));\n    if (savedFont) setFont(String(savedFont));\n    if (savedDarkMode) setDarkMode(String(savedDarkMode));\n    if (savedPage) setPage(Array(savedPage));\n    document.documentElement.setAttribute(\"darkMode\", darkMode);\n    setReloaded(false);\n  }\n\n  useEffect(() => {\n    sessionStorage.setItem(\"textSize\", textSize);\n    sessionStorage.setItem(\"font\", font);\n    sessionStorage.setItem(\"darkMode\", darkMode);\n  }, [textSize, font, darkMode]);\n\n  // Get the new page from the server\n  useEffect(() => {\n    if (location.state?.mistakeList) {\n      mistakeList.current = location.state.mistakeList;\n    }\n    setPage([]);\n    // if (location.state?.mistakeList) {\n    //   mistakeList.current = location.state.mistakeList;\n    // }\n\n    axios\n      .get(\"https://languagelearningbackend.onrender.com/book\", {\n        params: {\n          pageNum: pageNum,\n          title: title,\n          difficulty: difficulty,\n          language: language,\n        },\n      })\n      .then((response) => {\n        setPage(response.data.page);\n      })\n      .catch((error) => {\n        console.error(\"There was an error fetching the page!\", error);\n      });\n    // Save settings\n    sessionStorage.setItem(\"title\", title);\n    sessionStorage.setItem(\"difficulty\", difficulty);\n    sessionStorage.setItem(\"pageNum\", pageNum);\n    sessionStorage.setItem(\"language\", language);\n    sessionStorage.setItem(\"textSize\", textSize);\n    sessionStorage.setItem(\"font\", font);\n    sessionStorage.setItem(\"darkMode\", darkMode);\n    sessionStorage.setItem(\"page\", page);\n  }, [title, pageNum, language, difficulty]);\n\n  const updateMistakeList = (mistake) => {\n    mistakeList.current.push(mistake);\n  };\n\n  const handleClickBook = (newTitle) => {\n    setTitle(newTitle);\n  };\n\n  const handleNextPage = (newPageNum) => {\n    setPageNum(newPageNum);\n  };\n\n  const incrementPage = () => {\n    setPageNum((prevPageNum) => {\n      const newPageNum = Math.min(prevPageNum + 1, 1000); // Increment but limit to 1000\n      handleNextPage(newPageNum); // Ensure the function is called with the updated page number\n      return newPageNum;\n    });\n  };\n\n  const decrementPage = () => {\n    setPageNum((prevPageNum) => {\n      const newPageNum = Math.max(prevPageNum - 1, 1); // Decrement but limit to 1\n      handleNextPage(newPageNum); // Ensure the function is called with the updated page number\n      return newPageNum;\n    });\n  };\n\n  const handleGoToPage = (e) => {\n    setPageNum(e.target.value);\n  };\n\n  const handleBlur = () => {\n    // When the input loses focus, enforce the bounds (1 to 1000)\n    const validPageNum = Math.max(1, Math.min(1000, pageNum));\n    setPageNum(validPageNum);\n    handleNextPage(validPageNum); // Update the page number if needed\n  };\n\n  const handleGoToFlashCards = () => {\n    // Make sure mistake list is updated\n    setReload(!reload);\n\n    // Go to the flash cards page\n    navigate(\"/flash-cards\", {\n      state: { mistakeList: mistakeList.current },\n    });\n  };\n\n  // //Swipe to turn page\n  // let startX;\n  // let startY;\n\n  // const swipeArea = document.getElementById(\"swipeArea\");\n\n  // swipeArea.addEventListener(\"touchstart\", (e) => {\n  //   // Get the starting position of the touch\n  //   const touchStart = e.touches[0];\n  //   startX = touchStart.clientX;\n  //   startY = touchStart.clientY;\n  // });\n\n  // swipeArea.addEventListener(\"touchend\", (e) => {\n  //   // Get the ending position of the touch\n  //   const touchEnd = e.changedTouches[0];\n  //   const endX = touchEnd.clientX;\n  //   const endY = touchEnd.clientY;\n\n  //   // Calculate the swipe direction\n  //   const deltaX = endX - startX;\n  //   const deltaY = endY - startY;\n\n  //   // Detect horizontal swipe\n  //   if (Math.abs(deltaX) > Math.abs(deltaY)) {\n  //     if (deltaX > 0) {\n  //       incrementPage();\n  //     } else {\n  //       decrementPage();\n  //     }\n  //   }\n  // });\n\n  return (\n    <div class=\"container\" style={{ fontFamily: font }}>\n      {/* Header */}\n      {/* <header> */}\n      <div\n        class=\"mobile-content\"\n        style={{ fontSize: textSize, fontFamily: font }}\n      >\n        <details>\n          <summary>Bookshelf</summary>\n          <Bookshelf\n            handleClickBook={handleClickBook}\n            darkMode={darkMode}\n          ></Bookshelf>\n        </details>\n        <details>\n          <summary>Settings</summary>\n          <Header\n            title={title}\n            setDarkMode={setDarkMode}\n            setLanguage={setLanguage}\n            setTextSize={setTextSize}\n            setDifficulty={setDifficulty}\n            setFont={setFont}\n            darkMode={darkMode}\n            language={language}\n            textSize={textSize}\n            difficulty={difficulty}\n            font={font}\n            pageNum={pageNum}\n            handleGoToPage={handleGoToPage}\n            handleBlur={handleBlur}\n            handleGoToFlashCards={handleGoToFlashCards}\n            document={document}\n            id=\"drop-down\"\n          ></Header>\n        </details>\n        {/* <BookPage\n          page={page}\n          incrementPage={incrementPage}\n          decrementPage={decrementPage}\n          updateMistakeList={updateMistakeList}\n          darkMode={darkMode}\n          language={language}\n        ></BookPage> */}\n      </div>\n      {/* </header> */}\n      <header>\n        <Header\n          title={title}\n          setDarkMode={setDarkMode}\n          setLanguage={setLanguage}\n          setTextSize={setTextSize}\n          setDifficulty={setDifficulty}\n          setFont={setFont}\n          darkMode={darkMode}\n          language={language}\n          textSize={textSize}\n          difficulty={difficulty}\n          font={font}\n          pageNum={pageNum}\n          handleGoToPage={handleGoToPage}\n          handleBlur={handleBlur}\n          handleGoToFlashCards={handleGoToFlashCards}\n          document={document}\n          id=\"wide-view\"\n        ></Header>\n      </header>\n      <content id=\"swipeArea\" style={{ fontSize: textSize, fontFamily: font }}>\n        <div class=\"noDisplayOnMedia\">\n          <Bookshelf\n            handleClickBook={handleClickBook}\n            darkMode={darkMode}\n          ></Bookshelf>\n        </div>\n        <BookPage\n          page={page}\n          incrementPage={incrementPage}\n          decrementPage={decrementPage}\n          updateMistakeList={updateMistakeList}\n          darkMode={darkMode}\n          language={language}\n        ></BookPage>\n      </content>\n    </div>\n    // <div class=\"container\" style={{ fontFamily: font }}>\n    //   {/* Header */}\n    //   <div class=\"mobile-content\">\n    //     <details>\n    //       <summary>Bookshelf</summary>\n    //       <Bookshelf\n    //         handleClickBook={handleClickBook}\n    //         darkMode={darkMode}\n    //       ></Bookshelf>\n    //     </details>\n    //     <details>\n    //       <summary>Settings</summary>\n    //       <Header\n    //         title={title}\n    //         setDarkMode={setDarkMode}\n    //         setLanguage={setLanguage}\n    //         setTextSize={setTextSize}\n    //         setDifficulty={setDifficulty}\n    //         setFont={setFont}\n    //         darkMode={darkMode}\n    //         language={language}\n    //         textSize={textSize}\n    //         difficulty={difficulty}\n    //         font={font}\n    //         pageNum={pageNum}\n    //         handleGoToPage={handleGoToPage}\n    //         handleBlur={handleBlur}\n    //         handleGoToFlashCards={handleGoToFlashCards}\n    //         document={document}\n    //       ></Header>\n    //     </details>\n    //     <BookPage\n    //       page={page}\n    //       incrementPage={incrementPage}\n    //       decrementPage={decrementPage}\n    //       updateMistakeList={updateMistakeList}\n    //       darkMode={darkMode}\n    //       language={language}\n    //     ></BookPage>\n    //   </div>\n    //   <header>\n    //     <Header\n    //       title={title}\n    //       setDarkMode={setDarkMode}\n    //       setLanguage={setLanguage}\n    //       setTextSize={setTextSize}\n    //       setDifficulty={setDifficulty}\n    //       setFont={setFont}\n    //       darkMode={darkMode}\n    //       language={language}\n    //       textSize={textSize}\n    //       difficulty={difficulty}\n    //       font={font}\n    //       pageNum={pageNum}\n    //       handleGoToPage={handleGoToPage}\n    //       handleBlur={handleBlur}\n    //       handleGoToFlashCards={handleGoToFlashCards}\n    //       document={document}\n    //     ></Header>\n    //   </header>\n    //   <content style={{ fontSize: textSize, fontFamily: font }}>\n    //     <Bookshelf\n    //       handleClickBook={handleClickBook}\n    //       darkMode={darkMode}\n    //     ></Bookshelf>\n    //     <BookPage\n    //       page={page}\n    //       incrementPage={incrementPage}\n    //       decrementPage={decrementPage}\n    //       updateMistakeList={updateMistakeList}\n    //       darkMode={darkMode}\n    //       language={language}\n    //     ></BookPage>\n    //   </content>\n    // </div>\n  );\n}\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AACnE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,qBAAqB,MAAM,qCAAqC;AACvE,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,yBAAyB,CAAC;EAC7D,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,SAAS,CAAC;EACnD,MAAM,CAACwB,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,MAAM,CAAC;EACpD,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,QAAQ,CAAC;EAClD,MAAM,CAAC4B,IAAI,EAAEC,OAAO,CAAC,GAAG7B,QAAQ,CAAC,iBAAiB,CAAC;EACnD,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,OAAO,CAAC;EACjDgC,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,UAAU,EAAEJ,QAAQ,CAAC;EAE3D,MAAMK,WAAW,GAAGhC,MAAM,CAAC,EAAE,CAAC;EAC9B,MAAM,CAACiC,MAAM,EAAEC,SAAS,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMsC,QAAQ,GAAG1B,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAAC2B,IAAI,EAAErC,OAAO,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMwC,QAAQ,GAAG3B,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA,IAAIyC,QAAQ,EAAE;IACZ,MAAME,UAAU,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAClD,MAAMC,eAAe,GAAGF,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC;IAC5D,MAAME,YAAY,GAAGH,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC;IACtD,MAAMG,aAAa,GAAGJ,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;IACxD,MAAMI,aAAa,GAAGL,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;IACxD,MAAMK,SAAS,GAAGN,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;IAChD,MAAMM,aAAa,GAAGP,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;IACxD,MAAMO,SAAS,GAAGR,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;IAEhD,IAAIF,UAAU,EAAExB,QAAQ,CAACkC,MAAM,CAACV,UAAU,CAAC,CAAC;IAC5C,IAAIG,eAAe,EAAErB,aAAa,CAAC4B,MAAM,CAACP,eAAe,CAAC,CAAC;IAC3D,IAAIC,YAAY,EAAE1B,UAAU,CAACiC,MAAM,CAACP,YAAY,CAAC,CAAC;IAClD,IAAIC,aAAa,EAAEzB,WAAW,CAAC8B,MAAM,CAACL,aAAa,CAAC,CAAC;IACrD,IAAIC,aAAa,EAAEtB,WAAW,CAAC0B,MAAM,CAACJ,aAAa,CAAC,CAAC;IACrD,IAAIC,SAAS,EAAErB,OAAO,CAACwB,MAAM,CAACH,SAAS,CAAC,CAAC;IACzC,IAAIC,aAAa,EAAEpB,WAAW,CAACsB,MAAM,CAACF,aAAa,CAAC,CAAC;IACrD,IAAIC,SAAS,EAAElD,OAAO,CAACqD,KAAK,CAACH,SAAS,CAAC,CAAC;IACxCpB,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,UAAU,EAAEJ,QAAQ,CAAC;IAC3DY,WAAW,CAAC,KAAK,CAAC;EACpB;EAEAzC,SAAS,CAAC,MAAM;IACd2C,cAAc,CAACY,OAAO,CAAC,UAAU,EAAE9B,QAAQ,CAAC;IAC5CkB,cAAc,CAACY,OAAO,CAAC,MAAM,EAAE5B,IAAI,CAAC;IACpCgB,cAAc,CAACY,OAAO,CAAC,UAAU,EAAE1B,QAAQ,CAAC;EAC9C,CAAC,EAAE,CAACJ,QAAQ,EAAEE,IAAI,EAAEE,QAAQ,CAAC,CAAC;;EAE9B;EACA7B,SAAS,CAAC,MAAM;IAAA,IAAAwD,eAAA;IACd,KAAAA,eAAA,GAAIjB,QAAQ,CAACkB,KAAK,cAAAD,eAAA,eAAdA,eAAA,CAAgBtB,WAAW,EAAE;MAC/BA,WAAW,CAACwB,OAAO,GAAGnB,QAAQ,CAACkB,KAAK,CAACvB,WAAW;IAClD;IACAjC,OAAO,CAAC,EAAE,CAAC;IACX;IACA;IACA;;IAEAE,KAAK,CACFwD,GAAG,CAAC,mDAAmD,EAAE;MACxDC,MAAM,EAAE;QACNzC,OAAO,EAAEA,OAAO;QAChBF,KAAK,EAAEA,KAAK;QACZM,UAAU,EAAEA,UAAU;QACtBF,QAAQ,EAAEA;MACZ;IACF,CAAC,CAAC,CACDwC,IAAI,CAAEC,QAAQ,IAAK;MAClB7D,OAAO,CAAC6D,QAAQ,CAACC,IAAI,CAACzB,IAAI,CAAC;IAC7B,CAAC,CAAC,CACD0B,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D,CAAC,CAAC;IACJ;IACAtB,cAAc,CAACY,OAAO,CAAC,OAAO,EAAEtC,KAAK,CAAC;IACtC0B,cAAc,CAACY,OAAO,CAAC,YAAY,EAAEhC,UAAU,CAAC;IAChDoB,cAAc,CAACY,OAAO,CAAC,SAAS,EAAEpC,OAAO,CAAC;IAC1CwB,cAAc,CAACY,OAAO,CAAC,UAAU,EAAElC,QAAQ,CAAC;IAC5CsB,cAAc,CAACY,OAAO,CAAC,UAAU,EAAE9B,QAAQ,CAAC;IAC5CkB,cAAc,CAACY,OAAO,CAAC,MAAM,EAAE5B,IAAI,CAAC;IACpCgB,cAAc,CAACY,OAAO,CAAC,UAAU,EAAE1B,QAAQ,CAAC;IAC5Cc,cAAc,CAACY,OAAO,CAAC,MAAM,EAAEjB,IAAI,CAAC;EACtC,CAAC,EAAE,CAACrB,KAAK,EAAEE,OAAO,EAAEE,QAAQ,EAAEE,UAAU,CAAC,CAAC;EAE1C,MAAM4C,iBAAiB,GAAIC,OAAO,IAAK;IACrClC,WAAW,CAACwB,OAAO,CAACW,IAAI,CAACD,OAAO,CAAC;EACnC,CAAC;EAED,MAAME,eAAe,GAAIC,QAAQ,IAAK;IACpCrD,QAAQ,CAACqD,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMC,cAAc,GAAIC,UAAU,IAAK;IACrCrD,UAAU,CAACqD,UAAU,CAAC;EACxB,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BtD,UAAU,CAAEuD,WAAW,IAAK;MAC1B,MAAMF,UAAU,GAAGG,IAAI,CAACC,GAAG,CAACF,WAAW,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACpDH,cAAc,CAACC,UAAU,CAAC,CAAC,CAAC;MAC5B,OAAOA,UAAU;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1B1D,UAAU,CAAEuD,WAAW,IAAK;MAC1B,MAAMF,UAAU,GAAGG,IAAI,CAACG,GAAG,CAACJ,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACjDH,cAAc,CAACC,UAAU,CAAC,CAAC,CAAC;MAC5B,OAAOA,UAAU;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMO,cAAc,GAAIC,CAAC,IAAK;IAC5B7D,UAAU,CAAC6D,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB;IACA,MAAMC,YAAY,GAAGT,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEH,IAAI,CAACC,GAAG,CAAC,IAAI,EAAE1D,OAAO,CAAC,CAAC;IACzDC,UAAU,CAACiE,YAAY,CAAC;IACxBb,cAAc,CAACa,YAAY,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC;IACAlD,SAAS,CAAC,CAACD,MAAM,CAAC;;IAElB;IACAE,QAAQ,CAAC,cAAc,EAAE;MACvBoB,KAAK,EAAE;QAAEvB,WAAW,EAAEA,WAAW,CAACwB;MAAQ;IAC5C,CAAC,CAAC;EACJ,CAAC;;EAED;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE5C,OAAA;IAAKyE,KAAK,EAAC,WAAW;IAACC,KAAK,EAAE;MAAEC,UAAU,EAAE9D;IAAK,CAAE;IAAA+D,QAAA,gBAGjD5E,OAAA;MACEyE,KAAK,EAAC,gBAAgB;MACtBC,KAAK,EAAE;QAAEG,QAAQ,EAAElE,QAAQ;QAAEgE,UAAU,EAAE9D;MAAK,CAAE;MAAA+D,QAAA,gBAEhD5E,OAAA;QAAA4E,QAAA,gBACE5E,OAAA;UAAA4E,QAAA,EAAS;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC5BjF,OAAA,CAACL,SAAS;UACR6D,eAAe,EAAEA,eAAgB;UACjCzC,QAAQ,EAAEA;QAAS;UAAA+D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACVjF,OAAA;QAAA4E,QAAA,gBACE5E,OAAA;UAAA4E,QAAA,EAAS;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC3BjF,OAAA,CAACJ,MAAM;UACLO,KAAK,EAAEA,KAAM;UACba,WAAW,EAAEA,WAAY;UACzBR,WAAW,EAAEA,WAAY;UACzBI,WAAW,EAAEA,WAAY;UACzBF,aAAa,EAAEA,aAAc;UAC7BI,OAAO,EAAEA,OAAQ;UACjBC,QAAQ,EAAEA,QAAS;UACnBR,QAAQ,EAAEA,QAAS;UACnBI,QAAQ,EAAEA,QAAS;UACnBF,UAAU,EAAEA,UAAW;UACvBI,IAAI,EAAEA,IAAK;UACXR,OAAO,EAAEA,OAAQ;UACjB6D,cAAc,EAAEA,cAAe;UAC/BI,UAAU,EAAEA,UAAW;UACvBE,oBAAoB,EAAEA,oBAAqB;UAC3CvD,QAAQ,EAAEA,QAAS;UACnBiE,EAAE,EAAC;QAAW;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASP,CAAC,eAENjF,OAAA;MAAA4E,QAAA,eACE5E,OAAA,CAACJ,MAAM;QACLO,KAAK,EAAEA,KAAM;QACba,WAAW,EAAEA,WAAY;QACzBR,WAAW,EAAEA,WAAY;QACzBI,WAAW,EAAEA,WAAY;QACzBF,aAAa,EAAEA,aAAc;QAC7BI,OAAO,EAAEA,OAAQ;QACjBC,QAAQ,EAAEA,QAAS;QACnBR,QAAQ,EAAEA,QAAS;QACnBI,QAAQ,EAAEA,QAAS;QACnBF,UAAU,EAAEA,UAAW;QACvBI,IAAI,EAAEA,IAAK;QACXR,OAAO,EAAEA,OAAQ;QACjB6D,cAAc,EAAEA,cAAe;QAC/BI,UAAU,EAAEA,UAAW;QACvBE,oBAAoB,EAAEA,oBAAqB;QAC3CvD,QAAQ,EAAEA,QAAS;QACnBiE,EAAE,EAAC;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACTjF,OAAA;MAASkF,EAAE,EAAC,WAAW;MAACR,KAAK,EAAE;QAAEG,QAAQ,EAAElE,QAAQ;QAAEgE,UAAU,EAAE9D;MAAK,CAAE;MAAA+D,QAAA,gBACtE5E,OAAA;QAAKyE,KAAK,EAAC,kBAAkB;QAAAG,QAAA,eAC3B5E,OAAA,CAACL,SAAS;UACR6D,eAAe,EAAEA,eAAgB;UACjCzC,QAAQ,EAAEA;QAAS;UAAA+D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACNjF,OAAA,CAACN,QAAQ;QACP8B,IAAI,EAAEA,IAAK;QACXoC,aAAa,EAAEA,aAAc;QAC7BI,aAAa,EAAEA,aAAc;QAC7BX,iBAAiB,EAAEA,iBAAkB;QACrCtC,QAAQ,EAAEA,QAAS;QACnBR,QAAQ,EAAEA;MAAS;QAAAuE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP;EACL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAAC/E,EAAA,CAxUQD,IAAI;EAAA,QAeMJ,WAAW,EAEXC,WAAW;AAAA;AAAAqF,EAAA,GAjBrBlF,IAAI;AA0Ub,eAAeA,IAAI;AAAC,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}